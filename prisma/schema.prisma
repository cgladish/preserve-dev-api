// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  sub         String    @unique
  username    String    @unique @db.VarChar(20)
  displayName String    @db.VarChar(20)
  over18      Boolean   @default(false)
  snippets    Snippet[]
  comments    Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([sub, username])
}

model App {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(50)
  snippets  Snippet[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Snippet {
  id          Int                 @id @default(autoincrement())
  public      Boolean             @default(false)
  claimed     Boolean             @default(false)
  nsfw        Boolean             @default(false)
  title       String?             @db.VarChar(50)
  creator     User?               @relation(fields: [creatorId], references: [id])
  creatorId   Int?
  app         App                 @relation(fields: [appId], references: [id])
  appId       Int
  interaction SnippetInteraction?
  messages    Message[]
  comments    Comment[]
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt

  @@index([createdAt])
}

model SnippetInteraction {
  id        Int      @id @default(autoincrement())
  snippet   Snippet  @relation(fields: [snippetId], references: [id])
  snippetId Int      @unique
  views     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([snippetId])
}

model Message {
  id               Int                 @id @default(autoincrement())
  content          String              @db.VarChar(4000)
  sentAt           DateTime
  attachments      MessageAttachment[]
  authorUsername   String              @db.VarChar(50)
  authorIdentifier String?             @db.VarChar(50)
  authorAvatarUrl  String?             @db.VarChar(150)
  snippet          Snippet             @relation(fields: [snippetId], references: [id])
  snippetId        Int

  @@index([sentAt])
}

model MessageAttachment {
  id        Int      @id @default(autoincrement())
  type      String   @db.VarChar(20)
  filename  String?  @db.VarChar(150)
  url       String?  @db.VarChar(150)
  width     Int?
  height    Int?
  size      Int?
  Message   Message? @relation(fields: [messageId], references: [id])
  messageId Int?
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.VarChar(2000)
  creator   User     @relation(fields: [creatorId], references: [id])
  creatorId Int
  snippet   Snippet  @relation(fields: [snippetId], references: [id])
  snippetId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([snippetId, createdAt])
}
